package DAOMONGODB;

import model.Usuario;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

import org.bson.Document;
import org.bson.conversions.Bson;

import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;

public class UsuarioDAOMONGODB {
	private static MongoCollection<Document> _users;
	
	public static boolean salvarDados(Usuario usuario) {

		try {
			_users = ConexaoDAOMONGODB.getConnection().getCollection("usuario");
			
			Document found = _users.find(new Document("idUser", usuario.idUser)).first();
			
			if(found != null) {
				List<Bson> updateDocument = new ArrayList<Bson>();
				updateDocument.add(new Document("$set", new Document("email", usuario.email)));
				updateDocument.add(new Document("$set", new Document("nome", usuario.nome)));
				updateDocument.add(new Document("$set", new Document("telefone", usuario.telefone)));
				_users.updateOne(found, updateDocument);
				return true;
			}
			
			return false;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	public static Document buscarDados(int idUser) {
		try {
			_users = ConexaoDAOMONGODB.getConnection().getCollection("usuario");
			
			return _users.find(new Document("idUser", idUser)).first();
			
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	public static Document buscarHistorico(int idUser) {
		try {
			_users = ConexaoDAOMONGODB.getConnection().getCollection("historico");
			
			MongoCursor<Document> cursor = _users.find().iterator();
			
			while(cursor.hasNext()) {
				JOptionPane.showMessageDialog(null, cursor.next());
			}
			
			return (Document) _users.find(new Document("idUser", idUser));
		} catch (Exception e) {
			e.printStackTrace();
			
			return null;
		}
	}
}